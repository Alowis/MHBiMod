devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all(".")
devtools::load_all()
devtools::install()
devtools::use_vignette("introduction")
devtools::use_vignette()
library(usethis)
devtools::use_vignette()
use_vignette()
use_vignette("coucou")
library(MHBiMod)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(MHBiMod)
---
title: "coucou"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{coucou}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
```{r, include = FALSE}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
```
```{r setup}
library(MHBiMod)
```
rmarkdown::render()
rmarkdown::render()
install.packages("markdown")
rmarkdown::render()
devtools::document()
devtools::use_data()
devtools::load_all()
devtools::install_github("Alowis/MHBiMod")
devtools::install_github("Alowis/MHBiMod")
devtools::install_github("Alowis/MHBiMod")
devtools::install_github("Alowis/MHBiMod")
git remote add MHBiMod https://github.com/Alowis/MHBiMod
git remote add MHBiMod https://github.com/Alowis/MHBiMod
git
git push --set-upstream origin master
devtools::load_all()
devtools::install()
library("MHBiMod")
devtools::load_all()
devtools::install()
devtools::document()
devtools::load_all()
devtools::install()
curve.funct<-function(pxf,pyf,mar1,mar2,u,pos,pobje,ng=100,inter="comb"){
if(pos=="l"){
xmin=0
xmax=0.9
ymin=0.99
ymax=1
}
if(pos=="m"){
xmin=0.9
xmax=0.995
ymin=0.9
ymax=.995
}
if(pos=="r"){
xmin=0.99
xmax=1
ymin=0
ymax=.9
}
godx<-spline(pxf,mar1, n = ng, method = "fmm",
xmin = xmin, xmax = xmax, ties = mean)
gody<-spline(pyf,mar2, n = ng, method = "fmm",
xmin = ymin, xmax = ymax, ties = mean)
coxi<-approx(godx$y,godx$x, n = ng, method = "linear",
yleft = 0, yright = 1, ties = mean)
coyi<-approx(gody$y,gody$x, n = ng, method = "linear",
yleft = 0, yright = 1, ties = mean)
plot(coxi$x,coxi$y)
godx<-coxi$y
gody<-coyi$y
coxi<-coxi$x
coyi<-coyi$x
repeat{
idx<-which(diff(coxi)<=0)
print("cl")
if(length(idx)<1){
break
}
coxi[idx+1]=coxi[idx]+0.001
}
repeat{
idy<-which(diff(coyi)<=0)
print("cl")
if(length(idy)<1){
break
}
coyi[idy+1]=coyi[idy]+0.001
}
acp3<-matrix(NA, nrow = ng, ncol = ng)
for (k in 1:length(gody)){
for (j in 1:length(godx)){
if (inter=="comb"){
acp3[j,k]=surfuncCOP(godx[j], gody[k], cop=coco, para=c1)}
if (inter=="casc"){
acp3[j,k]= surfuncCOP(godx[j], gody[k], cop=coco, para=c1)/(1-godx[j])}
}
}
cl2<-contourLines(coxi,coyi, acp3, levels = pobje)
if(length(cl2)>0){
cl2<-as.matrix(data.frame(cl2[[1]]$x,cl2[[1]]$y))} else{cl2<-NA}
}
knitr::include_graphics("diagrams/cran-package.png")
devtools::check()
rm(list = c("curve.funct"))
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all()
devtools::load_all()
devtools::install()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all()
devtools::install()
load("fire01meantemp.Rdata")
data("fire01meantemp.Rdata")
devtools::load_all()
devtools::install()
data(porto)
data(porto)
data(porto)
AnalogSel(fire01meantemp)
AnalogSel(fire01meantemp)
detach("package:mobirep", unload = TRUE)
library(mobirep)
AnalogSel(fire01meantemp)
AnalogSel(fire01meantemp)
library(mobirep)
devtools::load_all()
AnalogSel(fire01meantemp)
library (mobirep)
AnalogSel(fire01meantemp)
Margins.mod()
mobirep::AnalogSel(fire01meantemp)
library(copula)
devtools::install()
devtools::load_all()
library(mobirep)
mobirep::AnalogSel(fire01meantemp)
library(texmex)
mobirep::AnalogSel(fire01meantemp)
devtools::load_all()
devtools::install()
detach("package:texmex", unload = TRUE)
library(texmex)
mobirep::AnalogSel(fire01meantemp)
AnalogSel(fire01meantemp)
detach("package:mobirep", unload = TRUE)
library(mobirep)
AnalogSel(fire01meantemp)
devtools::install()
devtools::load_all()
library(mobirep)
AnalogSel(fire01meantemp)
library(mobirep)
data("porto")
AnalogSel
AnalogSel(fire01meantemp)
library(mobirep)
AnalogSel(jj)
library(mobirep)
devtools::load_all(".")
library(mobirep)
library(mobirep)
devtools::load_all(".")
library(mobirep)
rtools
